import{_ as n,c as l,a as t,e as o,w as a,b as e,d,r as c,o as p}from"./app.ab098ea2.js";const M=JSON.parse('{"title":"PowerfulTable","description":"","frontmatter":{"title":"PowerfulTable","lang":"zh-CN","outline":[1,4]},"headers":[{"level":3,"title":"标签","slug":"标签","link":"#标签","children":[]},{"level":3,"title":"语言","slug":"语言","link":"#语言","children":[]},{"level":3,"title":"使用方法","slug":"使用方法","link":"#使用方法","children":[]},{"level":2,"title":"全局参数通过 use 注入 (优先级小于局部配置)","slug":"全局参数通过-use-注入-优先级小于局部配置","link":"#全局参数通过-use-注入-优先级小于局部配置","children":[]},{"level":2,"title":"属性","slug":"属性","link":"#属性","children":[{"level":3,"title":"OperateData（批量操作配置）","slug":"operatedata-批量操作配置","link":"#operatedata-批量操作配置","children":[]},{"level":3,"title":"BtnConfig（顶部按钮配置）","slug":"btnconfig-顶部按钮配置","link":"#btnconfig-顶部按钮配置","children":[]},{"level":3,"title":"Header（表格配置）","slug":"header-表格配置","link":"#header-表格配置","children":[]},{"level":3,"title":"Data 类型","slug":"data-类型","link":"#data-类型","children":[]}]},{"level":2,"title":"事件","slug":"事件","link":"#事件","children":[]},{"level":2,"title":"插槽","slug":"插槽","link":"#插槽","children":[]}],"relativePath":"zh-CN/component/powerful-table-doc.md","lastUpdated":1681891720000}'),r={name:"zh-CN/component/powerful-table-doc.md"},D=d('<h1 id="elpluspowerfultablets" tabindex="-1">ElPlusPowerfulTableTs <a class="header-anchor" href="#elpluspowerfultablets" aria-hidden="true">#</a></h1><div class="tip custom-block"><p class="custom-block-title">TIP</p><p><code>element-plus</code> 二次开发表格组件。此插件已 <code>el-plus-powerful-table</code> 作为基础，进行重构。部分功能将领先 <code>el-plus-powerful-table</code> 基础版本。 <code>el-plus-powerful-table</code> 的 <code>ts</code> 版本。<a href="https://peng-xiao-shuai.github.io/el-plus-powerful-table/" target="_blank" rel="noreferrer">DEMO</a></p></div><h3 id="标签" tabindex="-1">标签 <a class="header-anchor" href="#标签" aria-hidden="true">#</a></h3>',3),i=t("code",null,"废弃",-1),h=t("br",null,null,-1),y=t("code",null,"新增",-1),u=t("br",null,null,-1),b=d(`<h3 id="语言" tabindex="-1">语言 <a class="header-anchor" href="#语言" aria-hidden="true">#</a></h3><p>对于语言方面组件是默认使用 <code>英语</code> 因为 <code>element-plus</code> 默认是使用<code>英语</code>，不引用中文包的主要原因是避免增大体积。 组件内部语言跟随 <code>element-plus</code>。 部分 提示文字 语言，组件内部也支持 <code>中、英</code> 文，如果你需要支持更多语言或者更改组件内部 的语言，可以在 <code>use(PowerfulTable, { local: 您的语言变量 })</code> 替换。也可以参考我们提供的 <code>demo</code> 实现。</p><h3 id="使用方法" tabindex="-1">使用方法 <a class="header-anchor" href="#使用方法" aria-hidden="true">#</a></h3><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki dark-plus vp-code-dark" tabindex="0"><code><span class="line"></span>
<span class="line"><span style="color:#9CDCFE;">npm</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">i</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">el</span><span style="color:#D4D4D4;">-</span><span style="color:#9CDCFE;">plus</span><span style="color:#D4D4D4;">-</span><span style="color:#9CDCFE;">powerful</span><span style="color:#D4D4D4;">-</span><span style="color:#9CDCFE;">table</span><span style="color:#D4D4D4;">-</span><span style="color:#9CDCFE;">ts</span></span>
<span class="line"></span>
<span class="line"></span></code></pre><pre class="shiki dark-plus vp-code-light" tabindex="0"><code><span class="line"></span>
<span class="line"><span style="color:#9CDCFE;">npm</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">i</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">el</span><span style="color:#D4D4D4;">-</span><span style="color:#9CDCFE;">plus</span><span style="color:#D4D4D4;">-</span><span style="color:#9CDCFE;">powerful</span><span style="color:#D4D4D4;">-</span><span style="color:#9CDCFE;">table</span><span style="color:#D4D4D4;">-</span><span style="color:#9CDCFE;">ts</span></span>
<span class="line"></span>
<span class="line"></span></code></pre></div><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki dark-plus vp-code-dark" tabindex="0"><code><span class="line"><span style="color:#6A9955;">//main.ts</span></span>
<span class="line"><span style="color:#C586C0;">import</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">powerfulTable</span><span style="color:#D4D4D4;"> </span><span style="color:#C586C0;">from</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">&quot;el-plus-powerful-table-ts/es&quot;</span><span style="color:#D4D4D4;">;</span></span>
<span class="line"><span style="color:#C586C0;">import</span><span style="color:#D4D4D4;"> { </span><span style="color:#9CDCFE;">LangKey</span><span style="color:#D4D4D4;"> } </span><span style="color:#C586C0;">from</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">&quot;el-plus-powerful-table-ts/es/locale/packages&quot;</span><span style="color:#D4D4D4;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#569CD6;">const</span><span style="color:#D4D4D4;"> </span><span style="color:#4FC1FF;">app</span><span style="color:#D4D4D4;"> = </span><span style="color:#DCDCAA;">createApp</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">App</span><span style="color:#D4D4D4;">);</span></span>
<span class="line"><span style="color:#9CDCFE;">app</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">use</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">powerfulTable</span><span style="color:#D4D4D4;">, {</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#6A9955;">// 更改组件默认语言</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#9CDCFE;">locale:</span><span style="color:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#9CDCFE;">en:</span><span style="color:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#D4D4D4;">      </span><span style="color:#9CDCFE;">[LangKey.NoData]:</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">&#39;空&#39;</span><span style="color:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#D4D4D4;">      </span><span style="color:#9CDCFE;">[LangKey.PackUp]:</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">&#39;收起&#39;</span><span style="color:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#D4D4D4;">      </span><span style="color:#9CDCFE;">[LangKey.ReadFullText]:</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">&#39;展开阅读全文&#39;</span><span style="color:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#D4D4D4;">    },</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#CE9178;">&#39;zh-cn&#39;</span><span style="color:#9CDCFE;">:</span><span style="color:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#D4D4D4;">      </span><span style="color:#9CDCFE;">[LangKey.NoData]:</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">&#39;空&#39;</span><span style="color:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#D4D4D4;">      </span><span style="color:#9CDCFE;">[LangKey.PackUp]:</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">&#39;收起&#39;</span><span style="color:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#D4D4D4;">      </span><span style="color:#9CDCFE;">[LangKey.ReadFullText]:</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">&#39;展开阅读全文&#39;</span><span style="color:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#D4D4D4;">    },</span></span>
<span class="line"><span style="color:#D4D4D4;">  },</span></span>
<span class="line"><span style="color:#D4D4D4;">});</span></span>
<span class="line"><span style="color:#9CDCFE;">app</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">mount</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&quot;#app&quot;</span><span style="color:#D4D4D4;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A9955;">//*.vue</span></span>
<span class="line"><span style="color:#808080;">&lt;</span><span style="color:#4EC9B0;">powerful-table</span><span style="color:#D4D4D4;"> </span><span style="color:#F44747;">:list=&quot;list&quot;</span><span style="color:#D4D4D4;"> </span><span style="color:#F44747;">:header=&quot;header&quot;&gt;&lt;/powerful-table&gt;</span></span>
<span class="line"></span></code></pre><pre class="shiki dark-plus vp-code-light" tabindex="0"><code><span class="line"><span style="color:#6A9955;">//main.ts</span></span>
<span class="line"><span style="color:#C586C0;">import</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">powerfulTable</span><span style="color:#D4D4D4;"> </span><span style="color:#C586C0;">from</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">&quot;el-plus-powerful-table-ts/es&quot;</span><span style="color:#D4D4D4;">;</span></span>
<span class="line"><span style="color:#C586C0;">import</span><span style="color:#D4D4D4;"> { </span><span style="color:#9CDCFE;">LangKey</span><span style="color:#D4D4D4;"> } </span><span style="color:#C586C0;">from</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">&quot;el-plus-powerful-table-ts/es/locale/packages&quot;</span><span style="color:#D4D4D4;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#569CD6;">const</span><span style="color:#D4D4D4;"> </span><span style="color:#4FC1FF;">app</span><span style="color:#D4D4D4;"> = </span><span style="color:#DCDCAA;">createApp</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">App</span><span style="color:#D4D4D4;">);</span></span>
<span class="line"><span style="color:#9CDCFE;">app</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">use</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">powerfulTable</span><span style="color:#D4D4D4;">, {</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#6A9955;">// 更改组件默认语言</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#9CDCFE;">locale:</span><span style="color:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#9CDCFE;">en:</span><span style="color:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#D4D4D4;">      </span><span style="color:#9CDCFE;">[LangKey.NoData]:</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">&#39;空&#39;</span><span style="color:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#D4D4D4;">      </span><span style="color:#9CDCFE;">[LangKey.PackUp]:</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">&#39;收起&#39;</span><span style="color:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#D4D4D4;">      </span><span style="color:#9CDCFE;">[LangKey.ReadFullText]:</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">&#39;展开阅读全文&#39;</span><span style="color:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#D4D4D4;">    },</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#CE9178;">&#39;zh-cn&#39;</span><span style="color:#9CDCFE;">:</span><span style="color:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#D4D4D4;">      </span><span style="color:#9CDCFE;">[LangKey.NoData]:</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">&#39;空&#39;</span><span style="color:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#D4D4D4;">      </span><span style="color:#9CDCFE;">[LangKey.PackUp]:</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">&#39;收起&#39;</span><span style="color:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#D4D4D4;">      </span><span style="color:#9CDCFE;">[LangKey.ReadFullText]:</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">&#39;展开阅读全文&#39;</span><span style="color:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#D4D4D4;">    },</span></span>
<span class="line"><span style="color:#D4D4D4;">  },</span></span>
<span class="line"><span style="color:#D4D4D4;">});</span></span>
<span class="line"><span style="color:#9CDCFE;">app</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">mount</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&quot;#app&quot;</span><span style="color:#D4D4D4;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A9955;">//*.vue</span></span>
<span class="line"><span style="color:#808080;">&lt;</span><span style="color:#4EC9B0;">powerful-table</span><span style="color:#D4D4D4;"> </span><span style="color:#F44747;">:list=&quot;list&quot;</span><span style="color:#D4D4D4;"> </span><span style="color:#F44747;">:header=&quot;header&quot;&gt;&lt;/powerful-table&gt;</span></span>
<span class="line"></span></code></pre></div><h2 id="全局参数通过-use-注入-优先级小于局部配置" tabindex="-1">全局参数通过 <code>use</code> 注入 (优先级小于局部配置) <a class="header-anchor" href="#全局参数通过-use-注入-优先级小于局部配置" aria-hidden="true">#</a></h2>`,6),C=t("thead",null,[t("tr",null,[t("th",null,"参数"),t("th",null,"说明"),t("th",null,"TS类型"),t("th",null,"默认值")])],-1),g=t("code",null,"btnSlot",-1),f=t("td",null,[e("顶部按钮插槽 "),t("code",null,"all | ''"),e(" (全部显示) "),t("code",null,"left"),e(" (只显示左侧按钮)，"),t("code",null,"right"),e(" (只显示右侧按钮)")],-1),m=t("td",null,[e("^[enum]"),t("code",null,"'left' | 'right' | 'none'")],-1),w=t("td",null,"-",-1),_=t("tr",null,[t("td",null,[t("code",null,"locale")]),t("td",null,"内部部分文字语言"),t("td",null,[t("code",null,"LangPackages")]),t("td",null,[t("a",{href:"https://github.com/peng-xiao-shuai/el-plus-powerful-table/blob/master-ts/packages/locale/packages.ts"},[e("源码 "),t("code",null,"package/locale/packages"),e(" 文件中 "),t("code",null,"langPackages"),e(" 变量")])])],-1),E=d('<h2 id="属性" tabindex="-1">属性 <a class="header-anchor" href="#属性" aria-hidden="true">#</a></h2><table><thead><tr><th>参数</th><th>说明</th><th>TS类型</th><th>默认值</th></tr></thead><tbody><tr><td><code>size</code></td><td>组件大小</td><td>^[string]<code>&#39;medium&#39; | &#39;small&#39; | &#39;mini&#39;</code></td><td><code>small</code></td></tr><tr><td><code>list</code></td><td>数据</td><td><code>array</code></td><td>-</td></tr><tr><td><code>header</code></td><td>表格头部配置</td><td>^[array]<code>PowerfulTableHeader&lt;Row = any&gt;</code></td><td>-</td></tr><tr><td><code>selectData</code></td><td>选中的数据</td><td><code>array</code></td><td>-</td></tr><tr><td><code>selectCompare</code></td><td>选中数据和列表数据相比较的参数<code>[0]选中数据参数，[1]列表数据参数</code></td><td>^[array]<code>string[]</code></td><td><code>[&#39;id&#39;, &#39;id&#39;]</code></td></tr><tr><td><code>isSelect</code></td><td>是否显示多选</td><td><code>boolean</code></td><td><code>false</code></td></tr><tr><td><code>selectable</code></td><td>当前行是否可以选中</td><td>^[function]<code>(row: Row, index: number) =&gt; boolean</code></td><td>-</td></tr><tr><td><code>isPagination</code></td><td>是否显示分页器</td><td><code>boolean</code></td><td><code>false</code></td></tr><tr><td><code>operateData</code></td><td>批量操作</td><td>^[object]<code>PowerfulTableOperateData</code></td><td>-</td></tr><tr><td><code>btnConfig</code></td><td>表格顶部按钮配置</td><td>^[object]<code>BtnConfig</code></td><td>-</td></tr><tr><td><code>tree</code></td><td>树形表格配置</td><td>^[object]<code>PowerfulTableTree</code></td><td>-</td></tr><tr><td><code>paginationProperty</code></td><td>分页器组件扩展字段</td><td>^[object]<code>Partial&lt;PaginationProps&gt;</code></td><td>-</td></tr><tr><td><code>property</code></td><td>表格组件扩展字段</td><td>^[object]<code>Partial&lt;TableProps&lt;Row&gt;&gt;</code></td><td>-</td></tr></tbody></table><h3 id="operatedata-批量操作配置" tabindex="-1">OperateData（批量操作配置） <a class="header-anchor" href="#operatedata-批量操作配置" aria-hidden="true">#</a></h3><div class="tip custom-block"><p class="custom-block-title">提示</p><p>如果表格有 <code>header.props.type</code> 为 <code>input</code> 的则需要先填写该行数据，在选中该行，否则会出现获取不到 <code>input</code> 的值</p></div><table><thead><tr><th>参数</th><th>说明</th><th>TS类型</th><th>默认值</th></tr></thead><tbody><tr><td><code>value</code></td><td>下拉选中值</td><td><code>string</code></td><td>-</td></tr><tr><td><code>style</code></td><td>按钮样式</td><td><code>CSSProperties</code></td><td>-</td></tr><tr><td><code>prop</code></td><td>批量操作后 <code>batchOperate</code> 返回的 <code>ids</code> 中的数据是根据指定 <code>prop</code> 返回数组</td><td><code>string</code></td><td><code>id</code></td></tr><tr><td><code>btnProperty</code></td><td><code>el-button</code> 组件扩展字段 (支持 <code>el-button</code> 组件所有参数)</td><td>^[object]<code>InstanceType&lt;typeof import(&#39;element-plus&#39;)[&#39;ElSelect&#39;]&gt;[&#39;$props&#39;]</code></td><td>-</td></tr><tr><td><code>selectProperty</code></td><td><code>el-select</code> 组件扩展字段 (支持 <code>el-select</code> 组件所有参数)</td><td>^[object]<code>Partial&lt;ButtonProps&gt;</code></td><td>-</td></tr><tr><td><code>operates</code></td><td>批量操作下拉框数据</td><td>^[array]<code>PowerfulTableLabelValue[]</code></td><td>-</td></tr></tbody></table><h4 id="operates" tabindex="-1">Operates <a class="header-anchor" href="#operates" aria-hidden="true">#</a></h4><table><thead><tr><th>参数</th><th>说明</th><th>TS类型</th><th>默认值</th></tr></thead><tbody><tr><td><code>label</code></td><td>批量操作下拉框显示文字</td><td><code>string</code></td><td>-</td></tr><tr><td><code>value</code></td><td>批量操作下拉框值</td><td><code>string</code></td><td>-</td></tr></tbody></table><h3 id="btnconfig-顶部按钮配置" tabindex="-1">BtnConfig（顶部按钮配置） <a class="header-anchor" href="#btnconfig-顶部按钮配置" aria-hidden="true">#</a></h3>',8),x=t("thead",null,[t("tr",null,[t("th",null,"参数"),t("th",null,"说明"),t("th",null,"TS类型"),t("th",null,"默认值")])],-1),T=t("code",null,"btnSlot",-1),P=t("td",null,[e("是否启用顶部按钮插槽 "),t("code",null,"all / ''(全部显示)"),e("，"),t("code",null,"left(只显示左侧按钮)"),e("，"),t("code",null,"right(只显示右侧按钮)")],-1),F=t("td",null,[e("^[enum]"),t("code",null,"'left' | 'right' | 'none'")],-1),v=t("td",null,"-",-1),k=t("tr",null,[t("td",null,[t("code",null,"btnList")]),t("td",null,"左侧按钮配置"),t("td",null,[e("^[array]"),t("code",null,"BtnList[]")]),t("td",null,"-")],-1),S=d(`<h4 id="btnlist" tabindex="-1">BtnList <a class="header-anchor" href="#btnlist" aria-hidden="true">#</a></h4><table><thead><tr><th>参数</th><th>说明</th><th>TS类型</th><th>默认值</th></tr></thead><tbody><tr><td><code>style</code></td><td>样式</td><td><code>CSSProperties</code></td><td>-</td></tr><tr><td><code>disabled</code></td><td>是否禁用 如果为 <code>true</code> 那么 <code>operateType</code> 的参数将会失效</td><td><code>boolean</code></td><td>-</td></tr><tr><td><code>operateType</code></td><td>操作类型：<code>none 默认</code> (不需要选择数据)，<code>single</code> (只能操作一条数据)，<code>batch</code> (批量操作数据(至少选择一条数据以上))</td><td>^[object]<code>&#39;none&#39; | &#39;single&#39; | &#39;batch&#39;</code></td><td>-</td></tr><tr><td><code>text</code></td><td>按钮文字</td><td><code>string</code></td><td>-</td></tr><tr><td><code>effect</code></td><td>自定义数据将会在自定义事件 <code>btn-plus-change</code> 抛出</td><td><code>string</code></td><td>-</td></tr><tr><td><code>showBtn</code></td><td>控制按钮显示隐藏</td><td>^[function / boolean]<code>(row: Row, index: number) =&gt; boolean | boolean</code></td><td>-</td></tr></tbody></table><h3 id="header-表格配置" tabindex="-1">Header（表格配置） <a class="header-anchor" href="#header-表格配置" aria-hidden="true">#</a></h3><table><thead><tr><th>参数</th><th>说明</th><th>TS类型</th><th>默认值</th></tr></thead><tbody><tr><td><code>overflowTooltip</code></td><td>当内容过长被隐藏时显示</td><td><code>boolean</code></td><td><code>false</code></td></tr><tr><td><code>label</code></td><td>显示的标题</td><td><code>string</code></td><td>-</td></tr><tr><td><code>minWidth</code></td><td>对应列的最小宽度</td><td><code>string / number</code></td><td><code>140</code></td></tr><tr><td><code>width</code></td><td>对应列的宽度</td><td><code>string / number</code></td><td>-</td></tr><tr><td><code>sortable</code></td><td>排序</td><td>^[string / boolean]<code>&#39;custom&#39; | boolean</code></td><td><code>false</code></td></tr><tr><td><code>fixed</code></td><td>固定列</td><td>^[string / boolean]<code>&#39;left&#39; | &#39;right&#39; | boolean</code></td><td><code>false</code></td></tr><tr><td><code>headerAlign</code></td><td>表头对齐方式</td><td>^[enum]<code>left | &#39;center&#39; | &#39;right&#39;</code></td><td><code>&#39;center&#39;</code></td></tr><tr><td><code>headerSlotName</code></td><td>列头插槽</td><td><code>string</code></td><td>-</td></tr><tr><td><code>defaultShow</code></td><td>当前列默认显示或隐藏</td><td><code>boolean</code></td><td><code>true</code></td></tr><tr><td><code>defaultFilter</code></td><td>当前列默认是否过滤 <code>(isShowOrFilterColumn == &#39;filter&#39; 时默认 true)</code></td><td><code>boolean</code></td><td><code>false</code></td></tr><tr><td><code>isShowOrFilterColumn</code></td><td>右侧按钮选择列时是否显示（隐藏和筛选开关组件）</td><td>^[string / boolean]<code>&#39;show&#39; | &#39;filter&#39; | false</code></td><td>-</td></tr><tr><td><code>props</code></td><td>单元格数据</td><td>^[object]<code>PowerfulTableHeaderProps&lt;null, Row&gt;[] | PowerfulTableHeaderProps&lt;null, Row&gt;</code></td><td>-</td></tr><tr><td><code>property</code></td><td><code>el-table-column</code> 组件扩展字段 (支持 <code>el-table-column</code> 组件所有参数)</td><td>^[object]<code>Partial&lt;TableColumnCtx&lt;Row&gt;&gt;</code></td><td>-</td></tr></tbody></table><h4 id="props" tabindex="-1">Props <a class="header-anchor" href="#props" aria-hidden="true">#</a></h4><table><thead><tr><th>参数</th><th>说 明</th><th>TS类型</th><th>默认值</th></tr></thead><tbody><tr><td><code>prop</code></td><td>数据 <code>key</code> 值</td><td><code>string</code></td><td>-</td></tr><tr><td><code>type</code></td><td>数据类型</td><td>^[enum]<code>&#39;image&#39; | &#39;text&#39; | &#39;switch&#39; | &#39;btn&#39; | &#39;video&#39; | &#39;input&#39; | &#39;iconfont&#39; | &#39;tag&#39; | &#39;rate&#39; | &#39;href&#39; | &#39;slot&#39;</code></td><td><code>&#39;text&#39;</code></td></tr><tr><td><code>data</code></td><td>每个类型不一样 <code>data</code> 里值也不一样</td><td><code>_TYPE[&#39;xxx&#39;]</code></td><td>-</td></tr><tr><td><code>filters</code></td><td>过滤，只支持 <code>type</code> 为 <code>text、tag</code></td><td>^[array / function]<code>PowerfulTableFilter[] | (row: Row, index: number) =&gt; string</code></td><td><code>number</code></td></tr><tr><td><code>filtersType</code></td><td>过滤类型用于表格顶部右侧列按钮点击时，是否过滤，如果是则自定义表头将根据类型所弹出相应的操作元素（如果指定了 <code>headerSlotName</code> 和 <code>isShowOrFilterColumn</code> 为 <code>show</code> 或者 <code>false</code> 将会无效。如果是 <code>filtersType: select</code> 需要指定 <code>filters</code> 为数组类型）</td><td>^[string]<code>&#39;select&#39; | &#39;date&#39; | &#39;input&#39;</code></td><td><code>&#39;input&#39;</code></td></tr><tr><td><code>filterItem</code></td><td>指定过滤项 (当 <code>props</code> 是数组且长度大于 <code>1</code> 时有用) 如果多个 <code>prop</code> 的情况下没有指定 <code>filterItem</code> 过滤项 那么将使用第一个作进行过滤</td><td><code>boolean</code></td><td>-</td></tr><tr><td><code>customFilter</code></td><td>自定义过滤数据 <code>v(参数为值)，column(参数为header配置项)，resolve(回调函数传递数组)</code></td><td>^[function]<code>(v, column, resolve) =&gt; void</code></td><td>-</td></tr><tr><td><code>text</code></td><td>数据左侧显示的文字</td><td><code>string</code></td><td>-</td></tr><tr><td><code>reserve</code></td><td>当 <code>prop</code> 值渲染数据为空时可用 <code>reserve</code> 代替空数据 可传 <code>HTML</code> 标签</td><td><code>HTMLElement / string</code></td><td><code>&#39;no Data&#39;</code></td></tr><tr><td><code>render</code></td><td><a href="https://v3.cn.vuejs.org/guide/render-function.html#h-%E5%8F%82%E6%95%B0" target="_blank" rel="noreferrer">渲染函数</a></td><td>^[function]<code>(h: h, row: Row, index: number) =&gt; VNode / string / number</code></td><td>-</td></tr><tr><td><code>style</code></td><td>样式</td><td><code>CSSProperties</code></td><td>-</td></tr><tr><td><code>slotName</code></td><td>插槽名称</td><td><code>string</code></td><td><code>&#39;default&#39;</code></td></tr></tbody></table><h5 id="filters" tabindex="-1">Filters <a class="header-anchor" href="#filters" aria-hidden="true">#</a></h5><table><thead><tr><th>参数</th><th>说明</th><th>TS类型</th><th>默认值</th></tr></thead><tbody><tr><td><code>key</code></td><td>单元格里的数据</td><td><code>string</code></td><td>-</td></tr><tr><td><code>value</code></td><td>需要替换的值</td><td><code>string</code></td><td>-</td></tr></tbody></table><h3 id="data-类型" tabindex="-1">Data 类型 <a class="header-anchor" href="#data-类型" aria-hidden="true">#</a></h3><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki dark-plus vp-code-dark" tabindex="0"><code><span class="line"><span style="color:#6A9955;">// ...</span></span>
<span class="line"><span style="color:#C8C8C8;">data</span><span style="color:#D4D4D4;">: </span><span style="color:#DCDCAA;">setData</span><span style="color:#D4D4D4;">&lt;</span><span style="color:#CE9178;">&#39;image&#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#4EC9B0;">any</span><span style="color:#D4D4D4;">&gt;({</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#9CDCFE;">style:</span><span style="color:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#9CDCFE;">borderRadius:</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">&#39;10px&#39;</span><span style="color:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#D4D4D4;">  },</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#DCDCAA;">property</span><span style="color:#9CDCFE;">:</span><span style="color:#D4D4D4;"> ({ </span><span style="color:#9CDCFE;">row</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">index</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">props</span><span style="color:#D4D4D4;"> }) </span><span style="color:#569CD6;">=&gt;</span><span style="color:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#6A9955;">// console.log(row, index, props)</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#C586C0;">return</span><span style="color:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#D4D4D4;">      </span><span style="color:#6A9955;">// src: &#39;https://t7.baidu.com/it/u=1819248061,230866778&amp;fm=193&amp;f=GIF&#39;,</span></span>
<span class="line"><span style="color:#D4D4D4;">    }</span></span>
<span class="line"><span style="color:#D4D4D4;">  },</span></span>
<span class="line"><span style="color:#D4D4D4;">})</span></span>
<span class="line"><span style="color:#6A9955;">// ...</span></span>
<span class="line"></span></code></pre><pre class="shiki dark-plus vp-code-light" tabindex="0"><code><span class="line"><span style="color:#6A9955;">// ...</span></span>
<span class="line"><span style="color:#C8C8C8;">data</span><span style="color:#D4D4D4;">: </span><span style="color:#DCDCAA;">setData</span><span style="color:#D4D4D4;">&lt;</span><span style="color:#CE9178;">&#39;image&#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#4EC9B0;">any</span><span style="color:#D4D4D4;">&gt;({</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#9CDCFE;">style:</span><span style="color:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#9CDCFE;">borderRadius:</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">&#39;10px&#39;</span><span style="color:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#D4D4D4;">  },</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#DCDCAA;">property</span><span style="color:#9CDCFE;">:</span><span style="color:#D4D4D4;"> ({ </span><span style="color:#9CDCFE;">row</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">index</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">props</span><span style="color:#D4D4D4;"> }) </span><span style="color:#569CD6;">=&gt;</span><span style="color:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#6A9955;">// console.log(row, index, props)</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#C586C0;">return</span><span style="color:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#D4D4D4;">      </span><span style="color:#6A9955;">// src: &#39;https://t7.baidu.com/it/u=1819248061,230866778&amp;fm=193&amp;f=GIF&#39;,</span></span>
<span class="line"><span style="color:#D4D4D4;">    }</span></span>
<span class="line"><span style="color:#D4D4D4;">  },</span></span>
<span class="line"><span style="color:#D4D4D4;">})</span></span>
<span class="line"><span style="color:#6A9955;">// ...</span></span>
<span class="line"></span></code></pre></div><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>内部组件中的 <code>Emit</code> 事件将会抛出在 <code>component-emit</code> 上。具体内部组件中有哪些事件返回什么参数，将会在下面文档详细介绍。</p></div><h4 id="type-text-默认" tabindex="-1">Type = <code>&#39;text&#39;</code>（默认） <a class="header-anchor" href="#type-text-默认" aria-hidden="true">#</a></h4><table><thead><tr><th>参数</th><th>说明</th><th>TS类型</th><th>默认值</th></tr></thead><tbody><tr><td><code>line</code></td><td>超出多少的行数使用 <code>...</code> 代替</td><td><code>number</code></td><td><code>3</code></td></tr><tr><td><code>develop</code></td><td>是否显示 <code>“展开 / 收起”</code> 操作按钮</td><td><code>boolean</code></td><td><code>false</code></td></tr><tr><td><code>formatting</code></td><td>自定义当前单元格数据文本。<code>props</code> 为 <code>header</code> 配置的当前 <code>props</code> 值</td><td>^[function]<code>({row: Row, index: number, props: PowerfulTableHeaderProps&lt;&#39;text&#39;&gt;}) =&gt; (string | number) </code></td><td>-</td></tr></tbody></table><h4 id="text-emit" tabindex="-1">Text Emit <a class="header-anchor" href="#text-emit" aria-hidden="true">#</a></h4><table><thead><tr><th>方法名</th><th>说明</th><th>类型</th></tr></thead><tbody><tr><td><code>click</code></td><td>点击触发</td><td>^[function]<code>{row: Row, index: number, prop: string, event: Event}</code></td></tr></tbody></table><h4 id="type-image-图片" tabindex="-1">Type = <code>&#39;image&#39;</code>（图片） <a class="header-anchor" href="#type-image-图片" aria-hidden="true">#</a></h4><table><thead><tr><th>参数</th><th>说明</th><th>TS类型</th><th>默认值</th></tr></thead><tbody><tr><td><code>style</code></td><td>图片自定义样式</td><td><code>CSSProperties</code></td><td>-</td></tr><tr><td><code>property</code></td><td>属性扩展字段 (支持 <code>el-image</code> 组件所有参数)</td><td>^[object / function]<code>Partial&lt;ImageProp&gt; | (row: Row, index: number, props: PowerfulTableHeaderProps&lt;&#39;image&#39;, Row&gt;) =&gt; Partial&lt;ImageProp&gt;</code></td><td>-</td></tr></tbody></table><h4 id="image-emit" tabindex="-1">Image Emit <a class="header-anchor" href="#image-emit" aria-hidden="true">#</a></h4><table><thead><tr><th>方法名</th><th>说明</th><th>类型</th></tr></thead><tbody><tr><td><code>load</code></td><td>图片加载成功触发</td><td><code>e: Event</code></td></tr><tr><td><code>error</code></td><td>图片加载成功触发</td><td><code>e: Error</code></td></tr><tr><td><code>switch</code></td><td>图片加载成功触发</td><td><code>index: number</code></td></tr><tr><td><code>close</code></td><td>图片加载成功触发</td><td>-</td></tr></tbody></table><h4 id="type-btn-按钮" tabindex="-1">Type = <code>&#39;btn&#39;</code>（按钮） <a class="header-anchor" href="#type-btn-按钮" aria-hidden="true">#</a></h4><table><thead><tr><th>参数</th><th>说明</th><th>TS类型</th><th>默认值</th></tr></thead><tbody><tr><td><code>tip</code></td><td>提示文字</td><td><code>string</code></td><td>-</td></tr><tr><td><code>text</code></td><td>按钮文字</td><td><code>string</code></td><td>-</td></tr><tr><td><code>style</code></td><td>按钮样式</td><td><code>CSSProperties</code></td><td>-</td></tr><tr><td><code>showBtn</code></td><td>控制按钮显示隐藏</td><td>^[function]<code>(row: Row, index: number) =&gt; void / boolean</code></td><td>-</td></tr><tr><td><code>beforeClick</code></td><td>点击前事件, <code>props(当前配置的props) btnIndex(按钮下标) resolve(回调函数，传递boolean)</code></td><td>^[function]<code>({row, index, props, btnIndex, params}, resolve) =&gt; void</code></td><td>-</td></tr><tr><td><code>params</code></td><td>自定义数据</td><td><code>any</code></td><td>-</td></tr><tr><td><code>isMore</code></td><td>是否更多 当 <code>data</code> 是二维数组时有效</td><td><code>boolean</code></td><td><code>false</code></td></tr><tr><td><code>property</code></td><td>属性扩展字段 (支持 <code>el-button</code> 组件所有参数)</td><td>^[object / function]<code>Partial&lt;ButtonProp&gt; | ({ row: Row, index: number, props: PowerfulTableHeaderProps&lt;&#39;btn&#39;, Row&gt; }) =&gt; Partial&lt;ButtonProp&gt;</code></td><td>-</td></tr><tr><td><code>tipProperty</code></td><td>属性扩展字段</td><td>^[object]<code>Partial&lt;ElTooltipProps&gt;</code></td><td>-</td></tr></tbody></table><h4 id="type-switch-开关" tabindex="-1">Type = <code>&#39;switch&#39;</code>（开关） <a class="header-anchor" href="#type-switch-开关" aria-hidden="true">#</a></h4><table><thead><tr><th>参数</th><th>说明</th><th>TS类型</th><th>默认值</th></tr></thead><tbody><tr><td><code>style</code></td><td>开关自定义样式</td><td><code>CSSProperties</code></td><td>-</td></tr><tr><td><code>property</code></td><td>属性扩展字段 (支持 <code>el-switch</code> 组件所有参数)</td><td>^[object / function]<code>Partial&lt;SwitchProp&gt; | ({ row: Row, index: number, props: PowerfulTableHeaderProps&lt;&#39;switch&#39;, Row&gt; }) =&gt; Partial&lt;SwitchProp&gt;</code></td><td>-</td></tr></tbody></table><h4 id="switch-emit" tabindex="-1">Switch Emit <a class="header-anchor" href="#switch-emit" aria-hidden="true">#</a></h4><table><thead><tr><th>方法名</th><th>说明</th><th>类型</th></tr></thead><tbody><tr><td><code>change</code></td><td><code>switch</code> 状态发生变化时的回调函数</td><td><code>val</code> 新状态的值</td></tr></tbody></table><h4 id="type-input-textarea-输入框" tabindex="-1">Type = <code>&#39;input | textarea&#39;</code>（输入框） <a class="header-anchor" href="#type-input-textarea-输入框" aria-hidden="true">#</a></h4><table><thead><tr><th>参数</th><th>说明</th><th>TS类型</th><th>默认值</th></tr></thead><tbody><tr><td><code>style</code></td><td>输入框样式</td><td><code>CSSProperties</code></td><td>-</td></tr><tr><td><code>slot</code></td><td>输入框前置或后置</td><td>^[enum]<code>&#39;prepend&#39; | &#39;append&#39; | &#39;prefix&#39; | &#39;suffix&#39;</code></td><td>-</td></tr><tr><td><code>symbol</code></td><td>文字或者符号在插槽中显示</td><td><code>string</code></td><td>-</td></tr><tr><td><code>property</code></td><td>属性扩展字段 (支持 <code>el-input</code> 组件所有参数)</td><td>^[object / function]<code>Partial&lt;InputProp&gt; | ({ row: Row, index: number, props: PowerfulTableHeaderProps&lt;&#39;input&#39;, Row&gt; }) =&gt; Partial&lt;InputProp&gt;</code></td><td>-</td></tr></tbody></table><h4 id="input-emit" tabindex="-1">Input Emit <a class="header-anchor" href="#input-emit" aria-hidden="true">#</a></h4><table><thead><tr><th>方法名</th><th>说明</th><th>类型</th></tr></thead><tbody><tr><td><code>blur</code></td><td>输入框失去焦点时触发</td><td><code>event: FocusEvent</code></td></tr><tr><td><code>focus</code></td><td>输入框获得焦点时触发</td><td><code>event: FocusEvent</code></td></tr><tr><td><code>change</code></td><td>数据改变时，当输入框失去焦点或用户按 Enter 时触发</td><td><code>value: string | number</code></td></tr><tr><td><code>input</code></td><td>在 <code>Input</code> 值改变时触发</td><td><code>value: string | number</code></td></tr><tr><td><code>clear</code></td><td>点击由 <code>clearable</code> 属性生成的清空按钮时触发</td><td>-</td></tr></tbody></table><h4 id="type-video-视频" tabindex="-1">Type = <code>&#39;video&#39;</code>（视频） <a class="header-anchor" href="#type-video-视频" aria-hidden="true">#</a></h4><table><thead><tr><th>参数</th><th>说明</th><th>TS类型</th><th>默认值</th></tr></thead><tbody><tr><td><code>style</code></td><td>样式</td><td><code>CSSProperties</code></td><td>-</td></tr><tr><td><code>property</code></td><td>属性扩展字段 (支持 <code>video</code> 标签所有参数)</td><td>^[object / function]<code>Partial&lt;VideoHTMLAttributes&gt; | ({ row: Row, index: number, props: PowerfulTableHeaderProps&lt;&#39;video&#39;, Row&gt; }) =&gt; Partial&lt;VideoHTMLAttributes&gt;</code></td><td>-</td></tr></tbody></table><h4 id="type-iconfont-图标" tabindex="-1">Type = <code>&#39;iconfont&#39;</code>（图标） <a class="header-anchor" href="#type-iconfont-图标" aria-hidden="true">#</a></h4><table><thead><tr><th>参数</th><th>说明</th><th>TS类型</th><th>默认值</th></tr></thead><tbody><tr><td><code>class</code></td><td>样式类</td><td><code>string | string[]</code></td><td>-</td></tr><tr><td><code>style</code></td><td>图标自定义样式</td><td><code>CSSProperties</code></td><td>-</td></tr></tbody></table><h4 id="iconfont-emit" tabindex="-1">Iconfont Emit <a class="header-anchor" href="#iconfont-emit" aria-hidden="true">#</a></h4><table><thead><tr><th>方法名</th><th>说明</th><th>类型</th></tr></thead><tbody><tr><td><code>click</code></td><td>点击触发</td><td>^[object]<code>{row: Row, index: number, prop: string, event: Event}</code></td></tr></tbody></table><h4 id="type-rate-评分" tabindex="-1">Type = <code>&#39;rate&#39;</code>（评分） <a class="header-anchor" href="#type-rate-评分" aria-hidden="true">#</a></h4><table><thead><tr><th>参数</th><th>说明</th><th>TS类型</th><th>默认值</th></tr></thead><tbody><tr><td><code>style</code></td><td>样式</td><td><code>CSSProperties</code></td><td>-</td></tr><tr><td><code>property</code></td><td>属性扩展字段 (支持 <code>el-rate</code> 组件所有参数)</td><td>^[object / function]<code>Partial&lt;RateProps&gt; | ({ row: Row, index: number, props: PowerfulTableHeaderProps&lt;&#39;rate&#39;, Row&gt; }) =&gt; Partial&lt;RateProps&gt;</code></td><td>-</td></tr></tbody></table><h4 id="rate-emit" tabindex="-1">Rate Emit <a class="header-anchor" href="#rate-emit" aria-hidden="true">#</a></h4>`,38),A=t("thead",null,[t("tr",null,[t("th",null,"方法名"),t("th",null,"说明"),t("th",null,"类型")])],-1),R=t("code",null,"click",-1),q=t("td",null,"点击触发",-1),j=t("td",null,[e("^[object]"),t("code",null,"{row: Row, index: number, prop: string, event: Event}")],-1),I=t("tr",null,[t("td",null,[t("code",null,"change")]),t("td",null,"值改变触发"),t("td",null,[t("code",null,"val"),e(" 改变后的值")])],-1),L=d(`<h4 id="type-href-超链接" tabindex="-1">Type = <code>&#39;href&#39;</code>（超链接） <a class="header-anchor" href="#type-href-超链接" aria-hidden="true">#</a></h4><table><thead><tr><th>参数</th><th>说明</th><th>TS类型</th><th>默认值</th></tr></thead><tbody><tr><td><code>style</code></td><td>自定义样式</td><td><code>CSSProperties</code></td><td>-</td></tr><tr><td><code>target</code></td><td>跳转类型</td><td>^[enum]<code>&#39;_self&#39; | &#39;_blank&#39; | &#39;_parent&#39; | &#39;_top&#39;</code></td><td><code>&#39;\\_blank&#39;</code></td></tr><tr><td><code>text</code></td><td>所显示的文本</td><td>^[string / function]<code>(row: Row) =&gt; string</code></td><td>-</td></tr><tr><td><code>property</code></td><td>属性扩展字段 (支持 <code>el-link</code> 组件所有参数)</td><td>^[object / function]<code>Partial&lt;LinkProps&gt; | ({ row: Row, index: number, props: PowerfulTableHeaderProps&lt;&#39;href&#39;, Row&gt; }) =&gt; Partial&lt;LinkProps&gt;</code></td><td>-</td></tr></tbody></table><h4 id="type-slot-插槽" tabindex="-1">Type = <code>&#39;slot&#39;</code>（插槽） <a class="header-anchor" href="#type-slot-插槽" aria-hidden="true">#</a></h4><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki dark-plus vp-code-dark" tabindex="0"><code><span class="line"><span style="color:#6A9955;">//示例</span></span>
<span class="line"><span style="color:#D4D4D4;">{</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#C8C8C8;">label</span><span style="color:#D4D4D4;">: </span><span style="color:#CE9178;">&quot;slot（插槽）&quot;</span><span style="color:#D4D4D4;">, </span><span style="color:#6A9955;">//显示的标题</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#C8C8C8;">props</span><span style="color:#D4D4D4;">: [</span></span>
<span class="line"><span style="color:#D4D4D4;">    {</span></span>
<span class="line"><span style="color:#D4D4D4;">      </span><span style="color:#9CDCFE;">type:</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">&quot;slot&quot;</span><span style="color:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#D4D4D4;">      </span><span style="color:#9CDCFE;">slotName:</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">&quot;A&quot;</span><span style="color:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#D4D4D4;">    },</span></span>
<span class="line"><span style="color:#D4D4D4;">  ],</span></span>
<span class="line"><span style="color:#D4D4D4;">}</span></span>
<span class="line"></span></code></pre><pre class="shiki dark-plus vp-code-light" tabindex="0"><code><span class="line"><span style="color:#6A9955;">//示例</span></span>
<span class="line"><span style="color:#D4D4D4;">{</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#C8C8C8;">label</span><span style="color:#D4D4D4;">: </span><span style="color:#CE9178;">&quot;slot（插槽）&quot;</span><span style="color:#D4D4D4;">, </span><span style="color:#6A9955;">//显示的标题</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#C8C8C8;">props</span><span style="color:#D4D4D4;">: [</span></span>
<span class="line"><span style="color:#D4D4D4;">    {</span></span>
<span class="line"><span style="color:#D4D4D4;">      </span><span style="color:#9CDCFE;">type:</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">&quot;slot&quot;</span><span style="color:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#D4D4D4;">      </span><span style="color:#9CDCFE;">slotName:</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">&quot;A&quot;</span><span style="color:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#D4D4D4;">    },</span></span>
<span class="line"><span style="color:#D4D4D4;">  ],</span></span>
<span class="line"><span style="color:#D4D4D4;">}</span></span>
<span class="line"></span></code></pre></div><div class="language-html"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki dark-plus vp-code-dark" tabindex="0"><code><span class="line"><span style="color:#808080;">&lt;</span><span style="color:#569CD6;">powerful-table</span><span style="color:#808080;">&gt;</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#808080;">&lt;</span><span style="color:#569CD6;">template</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">#A</span><span style="color:#D4D4D4;">=</span><span style="color:#CE9178;">&quot;{ row,index }&quot;</span><span style="color:#808080;">&gt;</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#808080;">&lt;</span><span style="color:#569CD6;">div</span><span style="color:#808080;">&gt;</span></span>
<span class="line"><span style="color:#D4D4D4;">      </span><span style="color:#808080;">&lt;</span><span style="color:#569CD6;">el-image</span></span>
<span class="line"><span style="color:#D4D4D4;">        </span><span style="color:#9CDCFE;">style</span><span style="color:#D4D4D4;">=</span><span style="color:#CE9178;">&quot;width: 100px; border-radius: 10px&quot;</span></span>
<span class="line"><span style="color:#D4D4D4;">        </span><span style="color:#9CDCFE;">:src</span><span style="color:#D4D4D4;">=</span><span style="color:#CE9178;">&quot;row.imageUrl&quot;</span></span>
<span class="line"><span style="color:#D4D4D4;">      </span><span style="color:#808080;">&gt;&lt;/</span><span style="color:#569CD6;">el-image</span><span style="color:#808080;">&gt;</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#808080;">&lt;/</span><span style="color:#569CD6;">div</span><span style="color:#808080;">&gt;</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#808080;">&lt;/</span><span style="color:#569CD6;">template</span><span style="color:#808080;">&gt;</span></span>
<span class="line"><span style="color:#808080;">&lt;/</span><span style="color:#569CD6;">powerful-table</span><span style="color:#808080;">&gt;</span></span>
<span class="line"></span></code></pre><pre class="shiki dark-plus vp-code-light" tabindex="0"><code><span class="line"><span style="color:#808080;">&lt;</span><span style="color:#569CD6;">powerful-table</span><span style="color:#808080;">&gt;</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#808080;">&lt;</span><span style="color:#569CD6;">template</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">#A</span><span style="color:#D4D4D4;">=</span><span style="color:#CE9178;">&quot;{ row,index }&quot;</span><span style="color:#808080;">&gt;</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#808080;">&lt;</span><span style="color:#569CD6;">div</span><span style="color:#808080;">&gt;</span></span>
<span class="line"><span style="color:#D4D4D4;">      </span><span style="color:#808080;">&lt;</span><span style="color:#569CD6;">el-image</span></span>
<span class="line"><span style="color:#D4D4D4;">        </span><span style="color:#9CDCFE;">style</span><span style="color:#D4D4D4;">=</span><span style="color:#CE9178;">&quot;width: 100px; border-radius: 10px&quot;</span></span>
<span class="line"><span style="color:#D4D4D4;">        </span><span style="color:#9CDCFE;">:src</span><span style="color:#D4D4D4;">=</span><span style="color:#CE9178;">&quot;row.imageUrl&quot;</span></span>
<span class="line"><span style="color:#D4D4D4;">      </span><span style="color:#808080;">&gt;&lt;/</span><span style="color:#569CD6;">el-image</span><span style="color:#808080;">&gt;</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#808080;">&lt;/</span><span style="color:#569CD6;">div</span><span style="color:#808080;">&gt;</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#808080;">&lt;/</span><span style="color:#569CD6;">template</span><span style="color:#808080;">&gt;</span></span>
<span class="line"><span style="color:#808080;">&lt;/</span><span style="color:#569CD6;">powerful-table</span><span style="color:#808080;">&gt;</span></span>
<span class="line"></span></code></pre></div><h4 id="type-tag-标签" tabindex="-1">Type = <code>&#39;tag&#39;</code>（标签） <a class="header-anchor" href="#type-tag-标签" aria-hidden="true">#</a></h4><table><thead><tr><th>参数</th><th>说明</th><th>TS类型</th><th>默认值</th></tr></thead><tbody><tr><td><code>color</code></td><td>背景颜色，返回颜色值</td><td>^[function]<code>(row,tag) =&gt; string</code></td><td>-</td></tr><tr><td><code>number</code></td><td>需要显示前多少个</td><td><code>number</code></td><td><code>3</code></td></tr><tr><td><code>property</code></td><td>属性扩展字段 (支持 <code>el-tag</code> 组件所有参数)</td><td>^[object / function]<code>Partial&lt;TagProps&gt; | ({ row, index, props }) =&gt; Partial&lt;TagProps&gt;</code></td><td>-</td></tr></tbody></table><h4 id="tag-emit" tabindex="-1">Tag Emit <a class="header-anchor" href="#tag-emit" aria-hidden="true">#</a></h4><table><thead><tr><th>方法名</th><th>说明</th><th>类型</th></tr></thead><tbody><tr><td><code>click</code></td><td>点击触发</td><td>^[object]<code>{row: Row, index: number, prop: string, event: Event}</code></td></tr><tr><td><code>close</code></td><td>关闭 Tag 时触发的事件</td><td>-</td></tr></tbody></table><h2 id="事件" tabindex="-1">事件 <a class="header-anchor" href="#事件" aria-hidden="true">#</a></h2><table><thead><tr><th>事件名</th><th>说明</th><th>类型</th></tr></thead><tbody><tr><td><code>size-change</code></td><td>分页器切换, <code>select</code> 所有页中选中的数据</td><td>^[function]<code>({ pageNum: number; pageSize: number }, select: Row[])</code></td></tr><tr><td><code>sort-custom</code></td><td>远程排序</td><td>^[function]<code>({ column: any, prop: string, order: string })</code></td></tr><tr><td><code>batch-operate</code></td><td>批量操作</td><td>^[function]<code>({ ids: (string | number)[], item: PowerfulTableLabelValue, rows: Row[]})</code></td></tr><tr><td><code>btn-click</code></td><td>表格操作按钮</td><td>^[function]<code>({params: BtnDataType[&#39;params&#39;], row: Row, index: number})</code></td></tr><tr><td><code>btn-plus-change</code></td><td>表格顶部左侧操作按钮，<code>rows</code> 返回所有选中的行</td><td>^[function]<code>({ effect: BtnConfig.BtnList[&#39;effect&#39;], rows: Row[] })</code></td></tr><tr><td><code>btn-plus-refresh</code></td><td>表格顶部刷新按钮</td><td>-</td></tr><tr><td><code>row-click</code></td><td>行点击事件</td><td>^[function]<code>({row: Row, column: any, event: Event})</code></td></tr><tr><td><code>component-event</code></td><td>内部组件事件</td><td>^[function]<code>({componentName: keyof _TYPE | &#39;filter&#39;, eventType: string}, ...arg: any)</code></td></tr></tbody></table><h2 id="插槽" tabindex="-1">插槽 <a class="header-anchor" href="#插槽" aria-hidden="true">#</a></h2><table><thead><tr><th>插槽名</th><th>说明</th></tr></thead><tbody><tr><td><code>btn-left</code></td><td>表格顶部左侧按钮</td></tr><tr><td><code>btn-right</code></td><td>表格顶部右侧按钮</td></tr><tr><td><code>empty</code></td><td>表格内数据为空时内容</td></tr><tr><td><code>refresh</code></td><td>刷新</td></tr><tr><td><code>[slotName]</code></td><td>表格内自定义的插槽名称</td></tr><tr><td><code>[headerSlotName]</code></td><td>表格列头内自定义的插槽名称</td></tr></tbody></table>`,13);function N(B,V,H,K,O,z){const s=c("el-tag");return p(),l("div",null,[D,t("blockquote",null,[o(s,{type:"danger",class:"mx-1",effect:"light",round:""},{default:a(()=>[e("[版本号]")]),_:1}),e(" 表示功能"),i,e(),h,o(s,{type:"success",class:"mx-1",effect:"light",round:""},{default:a(()=>[e("[版本号]")]),_:1}),e(" 表示功能"),y,e(),u]),b,t("table",null,[C,t("tbody",null,[t("tr",null,[t("td",null,[g,o(s,{type:"danger",class:"mx-1",effect:"light",round:""},{default:a(()=>[e("2.1.13")]),_:1})]),f,m,w]),_])]),E,t("table",null,[x,t("tbody",null,[t("tr",null,[t("td",null,[T,o(s,{type:"danger",class:"mx-1",effect:"light",round:""},{default:a(()=>[e("2.1.13")]),_:1})]),P,F,v]),k])]),S,t("table",null,[A,t("tbody",null,[t("tr",null,[t("td",null,[R,e(),o(s,{type:"danger",class:"mx-1",effect:"light"},{default:a(()=>[e("2.1.5")]),_:1})]),q,j]),I])]),L])}const $=n(r,[["render",N]]);export{M as __pageData,$ as default};

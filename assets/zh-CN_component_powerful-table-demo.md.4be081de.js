import{_ as e,c as o,o as d,d as c}from"./app.ab098ea2.js";const m=JSON.parse('{"title":"PowerfulTableDemo","description":"","frontmatter":{"title":"PowerfulTableDemo","lang":"zh-CN","outline":[1,4]},"headers":[{"level":2,"title":"基础用法","slug":"基础用法","link":"#基础用法","children":[]},{"level":2,"title":"回显选中","slug":"回显选中","link":"#回显选中","children":[]},{"level":2,"title":"分页配置","slug":"分页配置","link":"#分页配置","children":[]},{"level":2,"title":"批量操作/顶部按钮配置","slug":"批量操作-顶部按钮配置","link":"#批量操作-顶部按钮配置","children":[]},{"level":2,"title":"表格头筛选","slug":"表格头筛选","link":"#表格头筛选","children":[]},{"level":2,"title":"替换组件默认语言","slug":"替换组件默认语言","link":"#替换组件默认语言","children":[]}],"relativePath":"zh-CN/component/powerful-table-demo.md","lastUpdated":1681891720000}'),t={name:"zh-CN/component/powerful-table-demo.md"},a=c('<h1 id="powerfultable-组件" tabindex="-1">PowerfulTable 组件 <a class="header-anchor" href="#powerfultable-组件" aria-hidden="true">#</a></h1><p>由于是使用 <code>ssr</code> 模式，示例组件源码中为了能成功构建，使用了 <code>import(&#39;XXX&#39;)</code>，复制源码时自行修改为 <code>import xxx from &#39;xxx&#39;</code></p><h2 id="基础用法" tabindex="-1">基础用法 <a class="header-anchor" href="#基础用法" aria-hidden="true">#</a></h2><p>:::demo 传递 <code>list</code> 和 <code>header</code> 参数渲染表格， <code>list</code> 参数为 <code>el-table</code> 表格中的 <code>data</code> 属性。<code>isSelect</code> 控制是否多选，仅只展示了部分 <code>date</code> 的 <code>type</code> 类型用法</p><p>powerful-table-demo/basic</p><p>:::</p><h2 id="回显选中" tabindex="-1">回显选中 <a class="header-anchor" href="#回显选中" aria-hidden="true">#</a></h2><p>:::demo <code>selectData</code> 回显选中数据，使用 <code>selectCompare</code> 控制根据 <code>data</code> 中哪个属性相比较。<code>selectCompare=[&#39;ID&#39;, &#39;id&#39;]</code>。 将 <code>selectData</code> 的数据中对象的 <code>ID</code> 属性和 <code>list</code> 中对象 <code>id</code> 属性相比较。<strong>所有页选中的数据将会在 <code>size-change</code> 事件中返回。</strong></p><p>powerful-table-demo/select-data</p><p>:::</p><h2 id="分页配置" tabindex="-1">分页配置 <a class="header-anchor" href="#分页配置" aria-hidden="true">#</a></h2><p>:::demo <code>pagination-property</code> 参数可传递所有 <code>el-pagination</code> 上的属性。需要注意的是，<code>total</code> 或者 <code>page-count</code> 必须传递一个否则会导致组件显示失败。</p><p>powerful-table-demo/pagination</p><p>:::</p><h2 id="批量操作-顶部按钮配置" tabindex="-1">批量操作/顶部按钮配置 <a class="header-anchor" href="#批量操作-顶部按钮配置" aria-hidden="true">#</a></h2><p>:::demo <code>isShowOrFilterColumn</code>属性控制列操作，<code>false</code> 将不会显示，<code>filter</code> 只能控制过滤，<code>show</code> 只能控制显示。可以通过 <code>defaultShow</code> 属性设置默认显示还是隐藏</p><p>powerful-table-demo/btn-config</p><p>:::</p><h2 id="表格头筛选" tabindex="-1">表格头筛选 <a class="header-anchor" href="#表格头筛选" aria-hidden="true">#</a></h2><div class="tip custom-block"><p class="custom-block-title">筛选的类型</p><p><strong>下拉框</strong>: <code>filters</code> 属性类型为 <code>array</code> 或者 <code>type</code> 属性类型为 <code>switch</code>。<br><strong>时间段选择</strong>: <code>filtersType</code> 属性为 <code>date</code>。<br><strong>输入框</strong>: <code>filtersType</code> 属性为 <code>input</code>。</p><p><strong>过滤规则</strong> 多个过滤时数据与其中一条匹配则显示</p></div><div class="warning custom-block"><p class="custom-block-title">注意</p><p>不支持树形结构表格时，联合过滤（以下表格举例，假设下表格时树形表格，对<code>发动机名称</code>表头进行过滤的时候，不能在对<code>名称</code>表头进行过滤）</p></div><p>:::demo 筛选功能只需要开启 <code>defaultFilter</code> 为 <code>true</code>, 或者 <code>isShowOrFilterColumn</code> 为 <code>filter</code> 时 <code>defaultFilter</code> 默认为 <code>true</code>。<code>filtersType</code> 不传递是默认为 <code>input</code>。<code>props</code> 为数组的情况下，默认是以第<code>0</code>下标进行过滤，也可以使用 <code>filterItem</code> 属性指定过滤项</p><p>powerful-table-demo/filters</p><p>:::</p><h2 id="替换组件默认语言" tabindex="-1">替换组件默认语言 <a class="header-anchor" href="#替换组件默认语言" aria-hidden="true">#</a></h2><p>:::demo 这里只展示了组件中语言可配置的属性，语言跟随 <code>element-plus</code> 改变，使用方法在文档中说明</p><p>powerful-table-demo/lang</p><p>:::</p>',28),l=[a];function r(i,p,s,n,h,u){return d(),o("div",null,l)}const b=e(t,[["render",r]]);export{m as __pageData,b as default};
